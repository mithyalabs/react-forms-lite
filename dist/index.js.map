{"version":3,"file":"index.js","sources":["../node_modules/tslib/tslib.es6.js","../src/lib/ml-form-builder/lib/Checkbox.tsx","../src/lib/ml-form-builder/lib/PlainText.tsx","../src/lib/ml-form-builder/lib/Radio.tsx","../src/lib/ml-form-builder/style.ts","../src/lib/ml-form-builder/lib/Select.tsx","../src/lib/ml-form-builder/lib/TextField.tsx","../src/lib/ml-form-builder/lib/ConditionalOperation/index.ts","../src/lib/ml-form-builder/index.tsx","../src/lib/ml-form-builder/Utils.tsx","../src/lib/ReactForm.tsx","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { FormikProps } from 'formik';\r\n// import { get, indexOf, isEmpty, map } from 'lodash';\r\nimport * as React from 'react';\r\nimport { IFieldProps } from '../index';\r\n// import { getFieldError, getMenuOptions, MenuOptionObject, MenuOptions } from '../Utils';\r\n\r\ninterface IOptionProps {\r\n    name?: string;\r\n    value?: string;\r\n}\r\n\r\ninterface IFProps {\r\n    id: string;\r\n    name: string;\r\n    label?: string;\r\n    options?: IOptionProps[];\r\n    class?: string;\r\n    helperText?: string;\r\n}\r\n\r\ninterface IProps extends IFieldProps {\r\n    fieldProps?: IFProps;\r\n}\r\n\r\nexport const Checkbox: React.FC<IProps> = (props) => {\r\n    const { formikProps = {} as FormikProps<unknown>, fieldProps = {} as IFProps } = props;\r\n\r\n    const updatedProps = {\r\n        ...fieldProps,\r\n        id: fieldProps.id,\r\n        label: fieldProps.label,\r\n        name: fieldProps.name,\r\n        options: fieldProps.options,\r\n        className: fieldProps.name + ' ' + (fieldProps.class ? fieldProps.class : ''),\r\n    };\r\n\r\n    return (\r\n        <div style={{ display: 'flex' }}>\r\n            {updatedProps.label && <label htmlFor={updatedProps.id}>{updatedProps.label}</label>}\r\n\r\n            {updatedProps.options && (\r\n                <div className={updatedProps.className} id={updatedProps.id}>\r\n                    {updatedProps.options.map((option) => {\r\n                        return typeof option === 'string' ? (\r\n                            <div key={option} style={{ display: 'flex', alignItems: 'center' }}>\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name={updatedProps.name}\r\n                                    onChange={formikProps.handleChange}\r\n                                    onBlur={formikProps.handleBlur}\r\n                                    id={option}\r\n                                    value={option} //\r\n                                />\r\n\r\n                                <label htmlFor={option}>{option}</label>\r\n                            </div>\r\n                        ) : (\r\n                            <div key={option.name} style={{ display: 'flex', alignItems: 'center' }}>\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name={updatedProps.name}\r\n                                    onChange={formikProps.handleChange}\r\n                                    onBlur={formikProps.handleBlur}\r\n                                    id={option.name}\r\n                                    value={option.value} //\r\n                                />\r\n\r\n                                <label htmlFor={option.name}>{option.value}</label>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                    {updatedProps.helperText && <div className=\"helperText\">{updatedProps.helperText}</div>}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n    // const { fieldConfig = {} as FormConfig, formikProps = {} as FormikValues, fieldProps = {} as IMUICheckboxProps } = props;\r\n    // const { label = '', helperText, options = [], header, headerProps, checkGroupProps, formControlProps, formHelperTextProps, formControlLabelProps, isLabelHtmlString = false, ...checkboxProps } = fieldProps;\r\n    // const fieldError = getFieldError((fieldProps.name || ''), formikProps);\r\n    // const value = get(formikProps, `values.${fieldProps.name}`);\r\n    // const menuOptions = getMenuOptions(options);\r\n    // return (\r\n    //     <FormControl error={!!fieldError} {...formControlProps}>\r\n    //         {\r\n    //             (header) &&\r\n    //             (\r\n    //                 <FormLabel {...headerProps}>{header}</FormLabel>\r\n    //             )\r\n    //         }\r\n    //         <FormGroup {...checkGroupProps}>\r\n    //             {\r\n    //                 (!isEmpty(menuOptions)) ?\r\n    //                     (\r\n    //                         map(menuOptions, (item: MenuOptionObject<FormControlLabelProps>, index) => {\r\n    //                             const { value: option, name, control, ...rest } = item;\r\n    //                             return (\r\n    //                                 <FormControlLabel\r\n    //                                     key={`${fieldConfig.id}_check_${index}`}\r\n    //                                     label={name || ''}\r\n    //                                     {...formControlLabelProps}\r\n    //                                     control={control ?? <Checkbox checked={(indexOf(value, option) > -1)} onBlur={formikProps.handleBlur} onChange={formikProps.handleChange} value={item.value}  {...{ ...checkboxProps, id: `${fieldConfig.id}_check_${index}` }} />}\r\n    //                                     {...rest}\r\n    //                                 />\r\n    //                             )\r\n    //                         })\r\n    //                     ) : (\r\n    //                         <FormControlLabel\r\n    //                             control={<Checkbox checked={(value || false)} onBlur={formikProps.handleBlur} onChange={formikProps.handleChange}  {...checkboxProps} />}\r\n    //                             label={isLabelHtmlString ? <div dangerouslySetInnerHTML={{ __html: label }} /> : label}\r\n    //                             {...formControlLabelProps}\r\n    //                         />\r\n    //                     )\r\n    //             }\r\n    //         </FormGroup>\r\n\r\n    //         {\r\n    //             (fieldError || helperText) &&\r\n    //             (<FormHelperText {...formHelperTextProps}>{fieldError || helperText}</FormHelperText>)\r\n    //         }\r\n    //     </FormControl>\r\n    // )\r\n};\r\n\r\nexport default Checkbox;\r\n","import React, { FC } from 'react';\r\nimport { IFieldProps } from '..';\r\n\r\nexport interface PlainTextFieldProps {\r\n    text?: string | JSX.Element;\r\n    class?: string;\r\n}\r\n\r\nexport interface PlainTextProps extends IFieldProps {\r\n    fieldProps?: PlainTextFieldProps;\r\n}\r\n\r\nexport const PlainText: FC<PlainTextProps> = (props) => {\r\n    const { fieldProps = {} as PlainTextFieldProps } = props;\r\n    const { text = '' } = fieldProps;\r\n    return <div>{text}</div>;\r\n};\r\n\r\nexport default PlainText;\r\n","import { FormikProps } from 'formik';\r\n// import { get } from 'lodash';\r\nimport * as React from 'react';\r\nimport { IFieldProps } from '../index';\r\n// import { getFieldError, getMenuOptions, MenuOptionObject, MenuOptions } from '../Utils';\r\n\r\ninterface IOptionProps {\r\n    name?: string;\r\n    value?: string;\r\n}\r\n\r\ninterface IFProps {\r\n    id: string;\r\n    name: string;\r\n    label?: string;\r\n    options?: IOptionProps[];\r\n    class?: string;\r\n    helperText?: string;\r\n}\r\n\r\ninterface IProps extends IFieldProps {\r\n    fieldProps?: IFProps;\r\n}\r\n\r\nexport const Radio: React.FC<IProps> = (props) => {\r\n    const { formikProps = {} as FormikProps<unknown>, fieldProps = {} as IFProps } = props;\r\n\r\n    const updatedProps = {\r\n        ...fieldProps,\r\n        id: fieldProps.id,\r\n        label: fieldProps.label,\r\n        name: fieldProps.name,\r\n        options: fieldProps.options,\r\n        className: fieldProps.name + ' ' + (fieldProps.class ? fieldProps.class : ''),\r\n    };\r\n\r\n    // const { fieldProps = {} as IMUIRadioProps, formikProps = {} as FormikValues, isReadOnly = false } = props;\r\n\r\n    // const fieldValue = get(formikProps, `values.${fieldProps.name}`) || '';\r\n\r\n    return (\r\n        <div style={{ display: 'flex' }}>\r\n            {updatedProps.label && <label htmlFor={updatedProps.id}>{updatedProps.label}</label>}\r\n\r\n            {updatedProps.options && (\r\n                <div className={updatedProps.className} id={updatedProps.id}>\r\n                    {updatedProps.options.map((option) => {\r\n                        return typeof option === 'string' ? (\r\n                            <div key={option} style={{ display: 'flex', alignItems: 'center' }}>\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    name={updatedProps.name}\r\n                                    onChange={formikProps.handleChange}\r\n                                    onBlur={formikProps.handleBlur}\r\n                                    id={option}\r\n                                    value={option} //radiogrp\r\n                                />\r\n\r\n                                <label htmlFor={option}>{option}</label>\r\n                            </div>\r\n                        ) : (\r\n                            <div key={option.name} style={{ display: 'flex', alignItems: 'center' }}>\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    name={updatedProps.name}\r\n                                    onChange={formikProps.handleChange}\r\n                                    onBlur={formikProps.handleBlur}\r\n                                    id={option.name}\r\n                                    value={option.value} //radiogrp\r\n                                />\r\n\r\n                                <label htmlFor={option.name}>{option.value}</label>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                    {updatedProps.helperText && <div className=\"helperText\">{updatedProps.helperText}</div>}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Radio;\r\n\r\n// typeof (radio) === 'string?\r\n//     < div key = { radio } style = {{ display: \"flex\", alignItems: 'center' }}>\r\n//                 <input\r\n//                     type=\"radio\"\r\n//                     name={updatedProps.name}\r\n//                     id={radio}\r\n//                     value={radio}\r\n//                     style={radioStyle} />\r\n//                 <label htmlFor={radio}>\r\n//                     {radio}\r\n//                 </label>\r\n//                 <br />:\r\n// <div key={radio.name} style={{ display: \"flex\", alignItems: 'center' }}>\r\n//     <input\r\n//         type=\"radio\"\r\n//         name={updatedProps.name}\r\n//         id={radio.name}\r\n//         value={radio.value}\r\n//         style={radioStyle} />\r\n//     <label htmlFor={radio.name}>\r\n//         {radio.value}\r\n//     </label>\r\n//     <br />\r\n// </div>\r\n","export const css = `\r\n        label{\r\n             margin-right:10px;\r\n        }\r\n        input[type=text],input[type=password]{\r\n            flex-grow: 1;\r\n            height: 100%;\r\n            padding: 2px;\r\n        }\r\n        textarea{\r\n            border:2px solid orange;\r\n            flex-grow: 1;\r\n            height: 40px;\r\n            padding: 2px;\r\n        }\r\n        select{\r\n          flex-grow: 1;\r\n          height: 100%;\r\n          cursor: pointer\r\n        }\r\n        input[type=radio],input[type=checkbox]{\r\n          margin-right:10px\r\n        }\r\n        .email-input{\r\n            border-radius:4px\r\n        }\r\n        .helperText{\r\n          color:grey;\r\n          font-size:12px;\r\n          margin-top:3px\r\n        }\r\n    `;\r\n\r\nexport const valueStyle = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n};\r\n","import { FormikProps } from 'formik';\r\nimport React from 'react';\r\nimport { IFieldProps } from '..';\r\nimport { get } from 'lodash';\r\nimport { valueStyle } from '../style';\r\n\r\ninterface IOptionProps {\r\n    name?: string;\r\n    value?: string;\r\n}\r\n\r\ninterface IFProps {\r\n    id: string;\r\n    name: string;\r\n    label?: string;\r\n    options?: IOptionProps[];\r\n    placeholder?: string;\r\n    class?: string;\r\n    helperText?: string;\r\n}\r\n\r\ninterface IProps extends IFieldProps {\r\n    fieldProps?: IFProps;\r\n}\r\nexport const Select: React.FC<IProps> = (props) => {\r\n    const { formikProps = {} as FormikProps<unknown>, fieldProps = {} as IFProps } = props;\r\n    const value = get(formikProps, `values.${fieldProps.name}`);\r\n    const updatedProps = {\r\n        ...fieldProps,\r\n        id: fieldProps.id,\r\n        label: fieldProps.label,\r\n        name: fieldProps.name,\r\n        options: fieldProps.options,\r\n        placeholder: fieldProps.placeholder,\r\n        className: fieldProps.name + ' ' + (fieldProps.class ? fieldProps.class : ''),\r\n    };\r\n\r\n    return (\r\n        <div style={{ display: 'flex' }}>\r\n            {updatedProps.label && <label htmlFor={updatedProps.id}>{updatedProps.label}</label>}\r\n\r\n            <div style={valueStyle as React.CSSProperties}>\r\n                <select\r\n                    className={updatedProps.className}\r\n                    id={updatedProps.id}\r\n                    defaultValue=\"\"\r\n                    value={value}\r\n                    onChange={formikProps.handleChange}\r\n                    onBlur={formikProps.handleBlur}\r\n                >\r\n                    <option disabled value=\"\">\r\n                        {updatedProps.placeholder || updatedProps.label || ''}\r\n                    </option>\r\n                    {updatedProps.options &&\r\n                        updatedProps.options.map((option) => {\r\n                            return typeof option === 'string' ? (\r\n                                <option value={option} key={option}>\r\n                                    {option}\r\n                                </option>\r\n                            ) : (\r\n                                <option value={option.value} key={option.value}>\r\n                                    {option.name}\r\n                                </option>\r\n                            );\r\n                        })}\r\n                </select>\r\n                {updatedProps.helperText && <div className=\"helperText\">{updatedProps.helperText}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Select;\r\n","import React from 'react';\r\nimport { FormikProps } from 'formik';\r\nimport { get } from 'lodash';\r\nimport { IFieldProps } from '..';\r\nimport { valueStyle } from '../style';\r\n// import { getFieldError } from \"../Utils\";\r\n\r\ninterface IFProps {\r\n    id: string;\r\n    name: string;\r\n    type: string;\r\n    label?: string;\r\n    multiline?: boolean;\r\n    placeholder?: string;\r\n    class?: string;\r\n    helperText?: string;\r\n}\r\n\r\ninterface IProps extends IFieldProps {\r\n    fieldProps?: IFProps;\r\n}\r\n\r\nexport const TextField: React.FC<IProps> = (props) => {\r\n    const { fieldProps = {} as IFProps, formikProps = {} as FormikProps<any> } = props;\r\n\r\n    const updatedProps = {\r\n        ...fieldProps,\r\n        onChange: formikProps.handleChange,\r\n        onBlur: formikProps.handleBlur,\r\n        value: getFieldValue(formikProps, fieldProps.name || ''),\r\n        className: fieldProps.name + ' ' + (fieldProps.class ? fieldProps.class : ''),\r\n    };\r\n\r\n    return (\r\n        <div style={{ display: 'flex' }}>\r\n            {updatedProps.label && <label htmlFor={updatedProps.id}>{updatedProps.label}</label>}\r\n\r\n            {!updatedProps.multiline ? (\r\n                <div style={valueStyle as React.CSSProperties}>\r\n                    <input\r\n                        className={updatedProps.className}\r\n                        id={updatedProps.id}\r\n                        type={updatedProps.type}\r\n                        placeholder={updatedProps.placeholder || updatedProps.label || ''}\r\n                        value={updatedProps.value}\r\n                        onChange={updatedProps.onChange}\r\n                        onBlur={updatedProps.onBlur}\r\n                    />\r\n                    {updatedProps.helperText && <div className=\"helperText\">{updatedProps.helperText}</div>}\r\n                </div>\r\n            ) : (\r\n                <div style={valueStyle as React.CSSProperties}>\r\n                    <textarea\r\n                        className={updatedProps.className}\r\n                        id={updatedProps.id}\r\n                        placeholder={updatedProps.placeholder || updatedProps.label}\r\n                        value={updatedProps.value}\r\n                        onChange={updatedProps.onChange}\r\n                        onBlur={updatedProps.onBlur}\r\n                    ></textarea>\r\n                    {updatedProps.helperText && <div className=\"helperText\">{updatedProps.helperText}</div>}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TextField;\r\n\r\nconst getFieldValue = (formikProps: FormikProps<any>, name: string) => {\r\n    let value = get(formikProps, `values.${name}`);\r\n    if (value === null || value === undefined || value === false) return '';\r\n    return value;\r\n};\r\n","import { FormikValues } from \"formik\";\r\n\r\nimport { get, forEach, isEmpty } from \"lodash\";\r\n\r\nimport { FormConfig } from \"../..\";\r\n\r\nexport type TFieldConditions = {\r\n    hidden?: boolean\r\n    logicOpn?: string\r\n    defaultProps?: object //Props to be returned if neccessary conditions are not satisfied\r\n    postEffectProps?: object //Props to be returned if and only if neccessary conditions are true\r\n    values?: ConditionCompareItem[]\r\n}\r\ntype compareValueType = string | number | boolean;\r\nconst compare = (value1: compareValueType, operator: string, value2: compareValueType) => {\r\n    switch (operator) {\r\n        case '>': return value1 > value2;\r\n        case '<': return value1 < value2;\r\n        case '>=': return value1 >= value2;\r\n        case '<=': return value1 <= value2;\r\n        case '==': return value1 == value2;\r\n        case '!=': return value1 != value2;\r\n        case '===': return value1 === value2;\r\n        case '!==': return value1 !== value2;\r\n        default: return false;\r\n    }\r\n}\r\ninterface ConditionCompareItem {\r\n  key: string;\r\n  compareValue: compareValueType;\r\n  operator: string;\r\n}\r\nexport interface IConditionalProps {\r\n    hidden?: boolean,\r\n    finalProps?: object\r\n}\r\nconst getConditionalOutput = (itemCondition: ConditionCompareItem, formikProps: FormikValues) => {\r\n    const itemValue = get(formikProps, `values.${itemCondition.key}`);\r\n    return compare(itemValue, itemCondition.operator, itemCondition.compareValue);\r\n}\r\n\r\n\r\n\r\nconst hasTruthyValue = (logicalOperation = 'AND', values: Array<ConditionCompareItem>, formikProps: FormikValues): boolean => {\r\n    let outputResult = false;\r\n\r\n    forEach(values, (item: ConditionCompareItem, index: number) => {\r\n        const result = getConditionalOutput(item, formikProps);\r\n        if (logicalOperation === 'AND' && !result) {\r\n            outputResult = false;\r\n            return false;\r\n        }\r\n        if (logicalOperation === 'OR' && result) {\r\n            outputResult = true;\r\n            return false;\r\n        }\r\n        if (index === values.length - 1) {\r\n            outputResult = (logicalOperation === 'AND') ? true : false;\r\n        }\r\n        return;\r\n    });\r\n    return outputResult;\r\n}\r\nexport const getConditionalProps = (itemConfig: FormConfig, formikProps: FormikValues) => {\r\n    const conditionInstructions = itemConfig.condition;\r\n    if (!conditionInstructions || isEmpty(conditionInstructions.values)) {\r\n        return { finalProps: {} };\r\n    }\r\n    const isValidCondition = hasTruthyValue(conditionInstructions.logicOpn, conditionInstructions.values || [], formikProps);\r\n\r\n    //console.log('Conditional props valid condition', isValidCondition);\r\n\r\n\r\n    if (isValidCondition) {\r\n        /*\r\n        IF CONDITION IS TRUE THEN RETURN THE TRUTHY PROPS ELSE RETURN THE DEFAULT PROPS\r\n        */\r\n        return { finalProps: conditionInstructions.postEffectProps }\r\n    }\r\n    else {\r\n        if (conditionInstructions.hidden === true)\r\n            return { finalProps: conditionInstructions.defaultProps, hidden: true };\r\n        else\r\n            return { finalProps: conditionInstructions.defaultProps, }\r\n    }\r\n}","import { FormikProps } from 'formik';\r\nimport { get, isArray, isFunction, map, uniqueId } from 'lodash';\r\nimport * as React from 'react';\r\nimport { Select, TextField, Checkbox, Radio, PlainText } from './lib';\r\nimport { getConditionalProps, TFieldConditions } from './lib/ConditionalOperation';\r\nimport { css } from './style';\r\nconst { useEffect, useState } = React;\r\n\r\nexport interface ReadOnlyProps {\r\n    renderer: (props: IFieldProps) => React.ReactNode;\r\n}\r\n\r\nexport interface FormConfig {\r\n    type: string;\r\n    name?: string;\r\n    id?: string;\r\n    valueKey: string;\r\n    flex?: number | string;\r\n    fieldProps?: object;\r\n    styles?: object;\r\n    class?: Array<string>;\r\n    helperText?: string;\r\n    condition?: TFieldConditions;\r\n    readOnlyProps?: ReadOnlyProps;\r\n}\r\n\r\ninterface RowSettingsProps {\r\n    horizontalSpacing?: number;\r\n    verticalSpacing?: number;\r\n    columnHorizontalPadding?: number;\r\n}\r\n\r\nexport interface BuilderSettingsProps extends RowSettingsProps {\r\n    isReadOnly?: boolean;\r\n}\r\n\r\nexport type RowSchema = Array<FormConfig> | FormConfig | { columns: Array<FormConfig>; settings?: RowSettingsProps };\r\n\r\nexport interface FormRowProps<T = any> {\r\n    schema: RowSchema;\r\n    rowId: string;\r\n    formikProps?: FormikProps<T>;\r\n    settings?: BuilderSettingsProps;\r\n}\r\n\r\nexport interface BuilderProps<T = any> {\r\n    schema: Array<RowSchema>;\r\n    formId: string;\r\n    formikProps?: FormikProps<T>;\r\n    settings?: BuilderSettingsProps;\r\n    isInProgress?: boolean;\r\n}\r\n\r\nexport interface IFieldProps<T = any> {\r\n    formikProps?: FormikProps<T>;\r\n    fieldConfig?: FormConfig;\r\n    isReadOnly?: boolean;\r\n}\r\n\r\nlet ComponentMapConfig: {\r\n    [key: string]: { component: JSX.Element; props?: object };\r\n} = {};\r\n\r\nexport const getComponentConfig = (type: string) => {\r\n    return ComponentMapConfig[type];\r\n};\r\n\r\nexport const attachField = (type: Array<string> | string, component: JSX.Element, props?: object) => {\r\n    if (isArray(type)) {\r\n        map(type, (item) => (ComponentMapConfig[item] = { component, props }));\r\n    } else ComponentMapConfig[type] = { component, props };\r\n};\r\n\r\nexport const setDefaultProps = (type: Array<string> | string, props: object) => {\r\n    if (isArray(type)) {\r\n        map(\r\n            type,\r\n            (item) =>\r\n                (ComponentMapConfig[item].props = {\r\n                    ...ComponentMapConfig[item].props,\r\n                    ...props,\r\n                })\r\n        );\r\n    } else if (ComponentMapConfig[type])\r\n        ComponentMapConfig[type].props = {\r\n            ...ComponentMapConfig[type]?.props,\r\n            ...props,\r\n        };\r\n};\r\n\r\nattachField('text', <TextField />, { type: 'text' });\r\nattachField('password', <TextField />, { type: 'password' });\r\nattachField('select', <Select />);\r\nattachField('radio', <Radio />);\r\nattachField('checkbox', <Checkbox />);\r\nattachField('plaintext', <PlainText />);\r\n\r\nexport const BuildFormRow: React.FC<FormRowProps> = (props) => {\r\n    const {\r\n        schema,\r\n        rowId,\r\n        formikProps = {} as FormikProps<any>,\r\n        settings = {\r\n            horizontalSpacing: 10,\r\n            verticalSpacing: 10,\r\n            columnHorizontalPadding: 0,\r\n            isReadOnly: false,\r\n        },\r\n    } = props;\r\n    let columnItems = get(schema, 'columns') as Array<FormConfig>;\r\n\r\n    let rowSettings = {\r\n        ...settings,\r\n        ...get(schema, 'settings'),\r\n    } as RowSettingsProps;\r\n\r\n    const colItems = isArray(schema) ? schema : isArray(columnItems) ? columnItems : [schema];\r\n\r\n    const rowStyle = { marginBottom: rowSettings.verticalSpacing || 10, display: 'flex' };\r\n    return (\r\n        <div style={rowStyle}>\r\n            {map(colItems, (item: FormConfig, index) => {\r\n                const componentConfig = ComponentMapConfig[item.type];\r\n\r\n                const horizontalSpacing = index === colItems.length - 1 ? 0 : rowSettings.horizontalSpacing || 10;\r\n                if (!componentConfig) return <div key={`${rowId}_field_${index}`} />;\r\n                const conditionalProps = getConditionalProps(item, formikProps);\r\n\r\n                const fieldProps = {\r\n                    id: item.id,\r\n                    name: item.name || item.valueKey,\r\n                    ...componentConfig.props,\r\n                    ...item.fieldProps,\r\n                    ...conditionalProps.finalProps,\r\n                };\r\n\r\n                const Component = componentConfig.component;\r\n\r\n                if (conditionalProps.hidden === true) return <div key={`${rowId}_field_${index}`} />;\r\n                return (\r\n                    <div\r\n                        key={`${rowId}_field_${index}`}\r\n                        className={item.valueKey}\r\n                        style={{\r\n                            flex: item.flex || 1,\r\n                            marginRight: horizontalSpacing,\r\n                            paddingLeft: rowSettings.columnHorizontalPadding,\r\n                            paddingRight: rowSettings.columnHorizontalPadding,\r\n                            maxWidth: '100%',\r\n                            ...item.styles,\r\n                        }}\r\n                    >\r\n                        {settings.isReadOnly && item.readOnlyProps && isFunction(item.readOnlyProps.renderer)\r\n                            ? item.readOnlyProps.renderer({\r\n                                  formikProps,\r\n                                  fieldConfig: item,\r\n                                  isReadOnly: settings.isReadOnly,\r\n                              })\r\n                            : React.cloneElement(Component, {\r\n                                  fieldProps,\r\n                                  formikProps,\r\n                                  fieldConfig: item,\r\n                                  isReadOnly: settings.isReadOnly,\r\n                              })}\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst getUpdateSchema = (schema: Array<RowSchema>, formId: string) => {\r\n    return map(schema, (schemaItem) => {\r\n        if (isArray(schemaItem)) {\r\n            return map(schemaItem, (item) => ({\r\n                ...item,\r\n                id: `${formId}_${uniqueId()}`,\r\n            }));\r\n        }\r\n        return { ...schemaItem, id: `${formId}_${uniqueId()}` };\r\n    });\r\n};\r\n\r\nexport const MLFormContent: React.FC<BuilderProps> = (props) => {\r\n    const { schema, formId, formikProps, settings } = props;\r\n    const [formSchema, setFormSchema] = useState<Array<RowSchema>>(schema);\r\n\r\n    useEffect(() => {\r\n        setFormSchema(getUpdateSchema(schema, formId));\r\n    }, [schema]);\r\n    return (\r\n        <>\r\n            {map(formSchema, (configRow, index) => {\r\n                const rowId = `${formId}_row_${index}`;\r\n\r\n                return <BuildFormRow key={rowId} rowId={rowId} schema={configRow} formikProps={formikProps} settings={settings} />;\r\n            })}\r\n        </>\r\n    );\r\n};\r\n\r\nexport const MLFormBuilder: React.FC<BuilderProps> = (props) => {\r\n    const { formikProps = {} as FormikProps<any> } = props;\r\n    return (\r\n        <form onSubmit={formikProps.handleSubmit}>\r\n            <style>{css}</style>\r\n            <MLFormContent {...props} />\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default MLFormBuilder;\r\n","import * as React from 'react';\r\nimport { map, isString, get } from 'lodash';\r\nimport { FormikValues } from 'formik';\r\nimport { TFile } from './lib/MUIFileInput';\r\n\r\nexport type MenuOptionObject<T = unknown> = { name: string | React.ReactNode; value: string } & T;\r\nexport type MenuOptions<T> = Array<string> | Array<MenuOptionObject<T>>;\r\nexport type ReadAsType = keyof Pick<FileReader, 'readAsBinaryString' | 'readAsDataURL' | 'readAsArrayBuffer' | 'readAsText'>;\r\nexport const getMenuOptions = <T extends any>(options: MenuOptions<T>) => {\r\n    return map(options, (item) => {\r\n        if (isString(item)) return { name: item, value: item };\r\n        return item;\r\n    });\r\n};\r\n\r\nexport const getFieldError = (fieldName: string, formikProps: FormikValues) => {\r\n    const fieldError = get(formikProps, `errors.${fieldName}`);\r\n    const isTouched = get(formikProps, `touched.${fieldName}`);\r\n    if (!isTouched && formikProps.submitCount < 1) return '';\r\n    return fieldError;\r\n};\r\n\r\nexport const processFilesWithCallback = (files: FileList | File[], callback: Function, readAs?: ReadAsType, encoding?: string) => {\r\n    let imgFiles: Array<TFile> = [];\r\n    let remFiles: any[] = [];\r\n    Array.from(files).forEach((file) => {\r\n        let reader = new FileReader();\r\n        reader.onload = () => {\r\n            let fileInfo: TFile = {\r\n                name: file.name,\r\n                type: file.type,\r\n                size: Math.round(file.size / 1024) + ' kB',\r\n                base64: file.type.includes('image') ? reader.result : null,\r\n                file: file,\r\n            };\r\n            if (file.type.includes('image')) {\r\n                imgFiles.push(fileInfo);\r\n            } else {\r\n                remFiles.push(file);\r\n            }\r\n            if (imgFiles.length + remFiles.length === files.length) {\r\n                callback({ imgs: imgFiles, rem: remFiles });\r\n            }\r\n        };\r\n        reader[readAs || 'readAsDataURL'](file, encoding);\r\n        // This works but remember only readAsText can take encoding as a parameter. Might want to mention this in the documentation.\r\n    });\r\n};\r\n\r\nexport const setValue = (value: any, formikProps: FormikValues, fieldProps: any) => {\r\n    formikProps.setFieldValue(get(fieldProps, 'name'), value);\r\n};\r\n","import * as React from 'react';\r\nimport { MLFormBuilder, RowSchema, BuilderSettingsProps } from './ml-form-builder';\r\nimport { Formik, FormikValues } from 'formik';\r\nexport * from './ml-form-builder';\r\nexport * from './ml-form-builder/lib';\r\nexport * from './ml-form-builder/Utils';\r\n\r\nexport interface IReactFormProps extends FormikValues {\r\n    config: Array<RowSchema>;\r\n    formId: string;\r\n    formSettings?: BuilderSettingsProps;\r\n    isInProgress?: boolean;\r\n    isReadOnly?: boolean;\r\n}\r\nexport const ReactForm: React.FC<IReactFormProps> = (props) => {\r\n    const { config, formId, initialValues = {}, onSubmit, formSettings, isInProgress = false, isReadOnly = false, ...formikProps } = props;\r\n    return (\r\n        <Formik initialValues={initialValues} onSubmit={onSubmit} {...formikProps}>\r\n            {(formProps) => (\r\n                <MLFormBuilder\r\n                    schema={config}\r\n                    formId={formId}\r\n                    settings={{ ...formSettings, isReadOnly }}\r\n                    formikProps={formProps}\r\n                    isInProgress={isInProgress}\r\n                />\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default ReactForm;\r\n","export * from './lib/ReactForm';\r\nexport default './lib/ReactForm';\r\n"],"names":["React.createElement","React","get","forEach","isEmpty","isArray","map","isFunction","React.cloneElement","uniqueId","isString","Formik"],"mappings":"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"}